@functions {
    // To support the layout classifaction below. Implementing as a razor function because we can, could otherwise be a Func<string[], string, string> in the code block following.
    string CalcuClassify(string[] zoneNames, string classNamePrefix)
    {
        var zoneCounter = 0;
        var zoneNumsFilled = string.Join("", zoneNames.Select(zoneName => { ++zoneCounter; return Model[zoneName] != null ? zoneCounter.ToString() : ""; }).ToArray());
        return HasText(zoneNumsFilled) ? classNamePrefix + zoneNumsFilled : "";
    }
}
@{
    /* Global includes for the theme
    ***************************************************************/

    //SetMeta(httpEquiv: "X-UA-Compatible", content: "IE=edge,chrome=1");
    <meta content="Andrews House, community center, nonprofit, help giving, free meals, medical clinic, supervised visitation, benefit bank, Delaware, Oh, Ohio, Angel Food" name="keywords" />
    Style.Include("layout.css");


    /* Some useful shortcuts or settings
    ***************************************************************/

    Func<dynamic, dynamic> Zone = x => Display(x); // Zone as an alias for Display to help make it obvious when we're displaying zones

    /* Layout classification based on filled zones
    ***************************************************************/

    //Add classes to the wrapper div to toggle aside widget zones on and off
    var asideClass = CalcuClassify(new[] { "AsideFirst", "AsideSecond" }, "aside-"); // for aside-1, aside-2 or aside-12 if any of the aside zones are filled
    if (HasText(asideClass))
    {
        Model.Classes.Add(asideClass);
    }

    //Add classes to the wrapper div to toggle tripel widget zones on and off
    var tripelClass = CalcuClassify(new[] { "TripelFirst", "TripelSecond", "TripelThird" }, "tripel-"); // for tripel-1, triple-2, etc. if any of the tripel zones are filled
    if (HasText(tripelClass))
    {
        Model.Classes.Add(tripelClass);
    }

    //Add classes to the wrapper div to toggle quad widget zones on and off
    var footerQuadClass = CalcuClassify(new[] { "FooterQuadFirst", "FooterQuadSecond", "FooterQuadThird", "FooterQuadFourth" }, "split-"); // for quad-1, quad-2, etc. if any of the quad zones are filled
    if (HasText(footerQuadClass))
    {
        Model.Classes.Add(footerQuadClass);
    }

    /* Inserting some ad hoc shapes
    ***************************************************************/

    WorkContext.Layout.Header.Add(New.Branding(), "5"); // Site name and link to the home page
    WorkContext.Layout.Footer.Add(New.BadgeOfHonor(), "5"); // Powered by Orchard
    WorkContext.Layout.Footer.Add(New.User(), "10"); // Login and dashboard links

    /* Last bit of code to prep the layout wrapper
    ***************************************************************/

    Model.Id = "layout-wrapper";
    var tag = Tag(Model, "div"); // using Tag so the layout div gets the classes, id and other attributes added to the Model
}
@*@tag.StartElement*@

<!-- Begin Container --><div id="container" style="width: 900px">
    <!-- Begin Masthead --><div id="masthead">
        <h1 class="style1"><img alt="" height="209" src="~/Themes/TheThemeMachine/Styles/AndrewsHouseBannerNew-psd.jpg" width="738" /></h1>
    </div>
    <!-- End Masthead -->
    <!-- Begin Navigation --><div id="navigation" style="width: 740px">
        @if (Model.Navigation != null)
        {
            <div id="layout-navigation" class="group">
                @Zone(Model.Navigation)
            </div>
        }

    </div>
    <!-- End Navigation -->
    <!-- Begin content_container --><div id="content_container">
        <!-- Begin Left Column --><div id="column_left" style="width: 484px">
            <!-- #BeginEditable "content" -->
            @if (Model.Content != null)
            {
                @Zone(Model.Content)
            }
            else
            {
                <h1>No Content</h1>
            }
            <!-- #EndEditable -->
        </div>
        <!-- End Left Column -->
        <!-- Begin Right Column --><div id="column_right" class="style2" style="width: 180px">
            <!-- #BeginEditable "sidebar" -->
                                       
            @if (Model.AsideSecond != null)
            {
                @Zone(Model.AsideSecond)
            }
            else
            {

                <p>No aside given</p>
            }
            <!-- #EndEditable -->
        </div>
        <!-- End Right Column -->
        <!-- Begin Footer --><div id="footer" style="height: 24px">
            <div id="copyright">
                <p>Copyright © @DateTime.Now.Date.Year Andrews House. All Rights Reserved.</p>
            </div>
        </div>
        <!-- End Footer -->
    </div>
    <!-- End content_container -->
</div>
<!-- End Container -->
@*@tag.EndElement*@

